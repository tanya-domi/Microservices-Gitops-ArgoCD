# This workflow will build and test the project on every push to the main branch

name: Petclinic-Ci

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                jave-version: ['17']

        steps:
            - name: Checkout target repo
              uses: actions/checkout@v4
              with:
                 submodules: true
                 token: ${{ secrets.CI_TOKEN }}
              
            - name: Fix up git URLs
              run: |
                git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
                git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"
            
            - name: Set up JDK ${{matrix.java}}
              uses: actions/setup-java@v4
              with:
                    distribution: 'adopt'
                    java-version: '17'
                    cache: 'maven'
            
            - name: Build with Maven Wrapper
              working-directory: spring-petclinic
              run: ./mvnw -B verify

    code-quality:
         runs-on: ubuntu-latest
         
         steps:
            - name: checkout code
              uses: actions/checkout@v4
              with:
                 submodules: true
                 token: ${{ secrets.CI_TOKEN }}
    

            - name: Fix up git URLs
              run: |
                git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
                git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"

            - name: sonarqube-scan-action 
              uses: SonarSource/sonarqube-scan-action@v5.0.0
              env:
                GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN}}
                args: >
                  -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
                  -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
                  -Dsonar.host.url=${{ secrets.SONAR_URL }}
                  -Dsonar.login=${{ secrets.SONAR_TOKEN }}
                  -Dsonar.sources=src/
                  -Dsonar.verbose=true

    docker:
        runs-on: ubuntu-latest
        
        needs: build

        steps:
            - name: checkout code
              uses: actions/checkout@v4
              with:
                 submodules: true
                 token: ${{ secrets.CI_TOKEN }}
              
              
            - name: Fix up git URLs
              run: |
                git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
                git config --global --add url."https://${{ secrets.GITHUB_SECRET }}:x-oauth-basic@github.com/".insteadOf "git@github.com:"

            - name: Install Docker
              uses: docker/setup-buildx-action@v1

            - name: Login to Docker
              uses: docker/login-action@v3
              with:
                registry: ${{ secrets.DOCKER_REGISTRY }}
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            
            - name: Build Docker and Push
              uses: docker/build-push-action@v6
              with:
                context: src/main/docker
                file: Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/petclinic:latest:${{ github}}
            
            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                image-ref: 'docker.io/${{ secrets.DOCKER_USERNAME }}/backend-api'
                format: 'sarif'
                output: 'trivy-results.sarif'
                severity: 'CRITICAL,HIGH' 

    Update-K8s:
        runs-on: ubuntu-latest
              
        needs: docker

        steps:
            - name: checkout code
              uses: actions/checkout@v4
              with:
                token: ${{ secrets.GITHUB_TOKEN }}

            - name: Update tags in K8s deployment manifest
              run: |
               sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/petclinic:${{github.run_id}}|" deployment.yaml
                
            - name: commit and push changes
              run: |
                git config --global user.email "sheytanyadomini@gmail.com"
                git config --global user.name "tanya-domi"
                git add deployment.yaml
                git commit -m "[CI]: Update deployment image tag"
                git push origin HEAD:main -f

    Slack-notification:
        if: always()
        name: Slack Notification
        
        needs: [build, docker, Update-K8s]
        
        continue-on-error: true
        runs-on: ubuntu-latest
        
        steps:
        - uses: actions/checkout@v4
        - run: cat deployment.yaml
         
        - uses: actions/checkout@v4
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
           SLACK_CHANNEL: github-actions-chennels
           SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
           SLACK_MESSAGE: ':hammer_and_wrench: Triggered by ${{github.actor}}'
           SLACK_TITLE: Information
